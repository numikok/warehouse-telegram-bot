import asyncio
import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from database import get_db, engine
from models import Base, User, UserRole, Operation, OrderStatus
from handlers import (
    admin,
    production,
    sales,
    warehouse,
    production_orders,
    orders,
    super_admin,
    back_handler,
    warehouse_callbacks,
)
from handlers.admin import cmd_users, cmd_report, cmd_assign_role
from handlers.sales import handle_warehouse_order, handle_stock, handle_create_order
from handlers.warehouse import cmd_stock, cmd_confirm_order, cmd_income_materials
from navigation import get_role_keyboard, MenuState, go_back, get_menu_keyboard, get_main_menu_state_for_role
import http.server
import socketserver
import threading
from flask import Flask

# Load environment variables
load_dotenv()

# Get token from environment
TOKEN = os.getenv("BOT_TOKEN")
APP_URL = os.getenv("APP_URL", "")  # URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Heroku, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è webhooks

# Enable logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# Register all handlers
dp.include_router(super_admin.router)
dp.include_router(admin.router)
dp.include_router(production.router)
dp.include_router(sales.router)
dp.include_router(warehouse.router)
dp.include_router(production_orders.router)
dp.include_router(orders.router)
dp.include_router(warehouse_callbacks.router)
dp.include_router(back_handler.router)

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run_flask():
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)

@dp.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    try:
        logging.info(f"Starting user registration process for user {message.from_user.id}")
        db = next(get_db())
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        telegram_id = message.from_user.id
        username = message.from_user.username or "unknown"
        
        # –ü–æ–ª—É—á–∞–µ–º ADMIN_USER_ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        admin_id = int(os.getenv("ADMIN_USER_ID", 0))
        
        logging.info(f"Checking if user {telegram_id} exists in database")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = db.query(User).filter(User.telegram_id == telegram_id).first()
        
        if not user:
            logging.info(f"Creating new user with telegram_id={telegram_id} and username={username}")
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            user = User(
                telegram_id=telegram_id,
                username=username,
                role=UserRole.SUPER_ADMIN if telegram_id == admin_id else UserRole.NONE
            )
            db.add(user)
            db.commit()
            logging.info("New user successfully created and committed to database")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é
            await state.set_state(MenuState.SUPER_ADMIN_MAIN if telegram_id == admin_id else None)
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            keyboard = get_role_keyboard(user.role) if user.role != UserRole.NONE else ReplyKeyboardRemove()
            
            if user.role == UserRole.NONE:
                await message.answer(
                    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    "‚è≥ *–û–∂–∏–¥–∞–Ω–∏–µ —Ä–æ–ª–∏*\n\n"
                    "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –Ω–æ —Ä–æ–ª—å –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞. "
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∑–Ω–∞—á–∏—Ç –≤–∞–º —Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ.",
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.SUPER_ADMIN:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üëë *–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*\n\n"
                    f"–í—ã –∏–º–µ–µ—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã –∏ –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–±—ã–º–∏ —Ä–æ–ª—è–º–∏.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n\n"
                    f"üë• **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏**\n"
                    f"‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    f"‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π\n\n"
                    f"üìä **–û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø–∞—Å–∞—Ö –Ω–∞ —Å–∫–ª–∞–¥–µ\n"
                    f"‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n"
                    f"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ\n\n"
                    f"üì¶ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º**\n"
                    f"‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –æ—Å—Ç–∞—Ç–∫–æ–≤ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤\n"
                    f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–æ–∫\n\n"
                    f"üè≠ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º**\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ\n"
                    f"‚Ä¢ –£—á–µ—Ç –±—Ä–∞–∫–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n\n"
                    f"**–≠–º—É–ª—è—Ü–∏—è —Ä–æ–ª–µ–π:**\n"
                    f"–í—ã –º–æ–∂–µ—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –ª—é–±–æ–π —Ä–æ–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É üîô **–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É**",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.SALES_MANAGER:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üíº *–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º*\n\n"
                    f"–í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–∫–∞–∑–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n\n"
                    f"üìù **–°–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑**\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞\n"
                    f"‚Ä¢ –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –∏ —Ç–æ–ª—â–∏–Ω—ã –ø–∞–Ω–µ–ª–µ–π\n"
                    f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—ã–∫–æ–≤ –∏ –∫–ª–µ—è –≤ –∑–∞–∫–∞–∑\n"
                    f"‚Ä¢ –£–∫–∞–∑–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\n\n"
                    f"üì¶ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏**\n"
                    f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n\n"
                    f"üìù **–ó–∞–∫–∞–∑–∞—Ç—å**\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π\n"
                    f"‚Ä¢ –£–∫–∞–∑–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞, —Ç–æ–ª—â–∏–Ω—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n\n"
                    f"üìã **–ú–æ–∏ –∑–∞–∫–∞–∑—ã**\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤\n"
                    f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n\n"
                    f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ‚óÄÔ∏è **–ù–∞–∑–∞–¥**",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.PRODUCTION:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üè≠ *–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ*\n\n"
                    f"–í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –∑–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π –∏ —É—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n\n"
                    f"üì• **–ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è**\n"
                    f"‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π, –ø–ª–µ–Ω–∫–∏, —Å—Ç—ã–∫–æ–≤ –∏ –∫–ª–µ—è\n"
                    f"‚Ä¢ –£–∫–∞–∑–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n\n"
                    f"üõ† **–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ**\n"
                    f"‚Ä¢ –£—á–µ—Ç –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–µ–π\n"
                    f"‚Ä¢ –°–ø–∏—Å–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –Ω–∞ —Å–∫–ª–∞–¥\n\n"
                    f"üö´ **–ë—Ä–∞–∫**\n"
                    f"‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±—Ä–∞–∫–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n"
                    f"‚Ä¢ –°–ø–∏—Å–∞–Ω–∏–µ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –£—á–µ—Ç –ø—Ä–∏—á–∏–Ω –±—Ä–∞–∫–∞\n\n"
                    f"üìã **–ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ**\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤\n"
                    f"‚Ä¢ –û—Ç–º–µ—Ç–∫–∞ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤\n\n"
                    f"üì¶ **–û—Å—Ç–∞—Ç–∫–∏**\n"
                    f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –∑–∞–ø–∞—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n\n"
                    f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ‚óÄÔ∏è **–ù–∞–∑–∞–¥**",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.WAREHOUSE:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üì¶ *–°–∫–ª–∞–¥*\n\n"
                    f"–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥—Å–∫–∏–º–∏ –∑–∞–ø–∞—Å–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n\n"
                    f"üì¶ **–û—Å—Ç–∞—Ç–∫–∏**\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ\n"
                    f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—ã—Ä—å—è\n\n"
                    f"üì¶ **–ú–æ–∏ –∑–∞–∫–∞–∑—ã**\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤\n"
                    f"‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–≥—Ä—É–∑–∫–µ\n"
                    f"‚Ä¢ –û—Ç–º–µ—Ç–∫–∞ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤\n\n"
                    f"‚úÖ **–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã**\n"
                    f"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤\n"
                    f"‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö –∏ —Å–æ—Å—Ç–∞–≤–µ\n\n"
                    f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ‚óÄÔ∏è **–ù–∞–∑–∞–¥**",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
        else:
            logging.info(f"Existing user found: {user.telegram_id}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            if telegram_id == admin_id and user.role != UserRole.SUPER_ADMIN:
                user.role = UserRole.SUPER_ADMIN
                db.commit()
                logging.info(f"Updated user role to SUPER_ADMIN for admin user")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
            if user.username != username and username != "unknown":
                user.username = username
                db.commit()
                logging.info(f"Updated username to {username}")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é
            main_menu_state = MenuState.SUPER_ADMIN_MAIN if user.role == UserRole.SUPER_ADMIN else \
                            MenuState.SALES_MAIN if user.role == UserRole.SALES_MANAGER else \
                            MenuState.WAREHOUSE_MAIN if user.role == UserRole.WAREHOUSE else \
                            MenuState.PRODUCTION_MAIN if user.role == UserRole.PRODUCTION else \
                            None
            
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–æ–ª–∏, –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if main_menu_state:
                await state.set_state(main_menu_state)
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –∏–ª–∏ —É–±–∏—Ä–∞–µ–º –µ—ë –¥–ª—è —Ä–æ–ª–∏ NONE
            keyboard = get_role_keyboard(user.role) if user.role != UserRole.NONE else ReplyKeyboardRemove()
            
            if user.role == UserRole.NONE:
                await message.answer(
                    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    "‚è≥ *–û–∂–∏–¥–∞–Ω–∏–µ —Ä–æ–ª–∏*\n\n"
                    "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –Ω–æ —Ä–æ–ª—å –ø–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞. "
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∑–Ω–∞—á–∏—Ç –≤–∞–º —Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ.",
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.SUPER_ADMIN:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üëë *–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*\n\n"
                    f"–í—ã –∏–º–µ–µ—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
                    f"‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n"
                    f"‚Ä¢ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∫–ª–∞–¥–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.SALES_MANAGER:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üíº *–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º*\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤\n"
                    f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤\n"
                    f"‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.PRODUCTION:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üè≠ *–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ*\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ —É—á–µ—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
                    f"‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –£—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –ø–∞–Ω–µ–ª–µ–π\n"
                    f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤\n"
                    f"‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –±—Ä–∞–∫–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
            elif user.role == UserRole.WAREHOUSE:
                await message.answer(
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º!\n\n"
                    f"üì¶ *–°–∫–ª–∞–¥*\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤.\n\n"
                    f"**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
                    f"‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
                    f"‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤\n"
                    f"‚Ä¢ –û—Ç–º–µ—Ç–∫–∞ –æ–± –æ—Ç–≥—Ä—É–∑–∫–µ\n"
                    f"‚Ä¢ –£—á–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤",
                    reply_markup=keyboard,
                    parse_mode="Markdown"
                )
    except Exception as e:
        logging.error(f"Error in start command: {e}", exc_info=True)
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            parse_mode="Markdown"
        )
    finally:
        db.close()

@dp.message(Command("help"))
async def cmd_help(message: Message, state: FSMContext):
    db = next(get_db())
    user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
    
    if not user:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.", parse_mode="Markdown")
        return
    
    # –û–±–Ω–æ–≤–∏–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–æ–ª—å—é
    main_menu_state = MenuState.SUPER_ADMIN_MAIN if user.role == UserRole.SUPER_ADMIN else \
                       MenuState.SALES_MAIN if user.role == UserRole.SALES_MANAGER else \
                       MenuState.WAREHOUSE_MAIN if user.role == UserRole.WAREHOUSE else \
                       MenuState.PRODUCTION_MAIN
    await state.set_state(main_menu_state)
    
    commands = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
    
    if user.role == UserRole.SUPER_ADMIN:
        commands += "üîë –ö–æ–º–∞–Ω–¥—ã —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
        commands += "/users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        commands += "/assign_role - –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
        commands += "/report - –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤\n\n"
        
        commands += "üè≠ –ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:\n"
        commands += "üì• –ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è - –ó–∞–ø–∏—Å—å –ø—Ä–∏—Ö–æ–¥–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
        commands += "üõ† –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ - –ó–∞–ø–∏—Å—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n\n"
        
        commands += "üíº –ö–æ–º–∞–Ω–¥—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n"
        commands += "üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
        commands += "üìä –°–∫–ª–∞–¥ - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Å—Ç–∞—Ç–∫–æ–≤\n\n"
        
        commands += "üì¶ –ö–æ–º–∞–Ω–¥—ã —Å–∫–ª–∞–¥–∞:\n"
        commands += "/stock - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫–ª–∞–¥–∞\n"
        commands += "/confirm_order - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤\n"
        commands += "/income_materials - –ü—Ä–∏—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n\n"
    
    elif user.role == UserRole.PRODUCTION:
        commands += "–ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:\n"
        commands += "üì• –ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è - –ó–∞–ø–∏—Å—å –ø—Ä–∏—Ö–æ–¥–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
        commands += "üõ† –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ - –ó–∞–ø–∏—Å—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n\n"
    
    elif user.role == UserRole.SALES_MANAGER:
        commands += "–ö–æ–º–∞–Ω–¥—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n"
        commands += "üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
        commands += "üìä –°–∫–ª–∞–¥ - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Å—Ç–∞—Ç–∫–æ–≤\n\n"
    
    elif user.role == UserRole.WAREHOUSE:
        commands += "–ö–æ–º–∞–Ω–¥—ã —Å–∫–ª–∞–¥–∞:\n"
        commands += "/stock - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫–ª–∞–¥–∞\n"
        commands += "/confirm_order - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤\n"
        commands += "/income_materials - –ü—Ä–∏—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n\n"
    
    await message.answer(commands, reply_markup=get_role_keyboard(user.role), parse_mode="Markdown")

@dp.message(F.text == "üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
async def button_order(message: Message, state: FSMContext):
    await handle_create_order(message, state)

@dp.message(F.text == "üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏")
async def button_stock(message: Message, state: FSMContext):
    await sales.handle_stock(message, state)

@dp.message(F.text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
async def button_users(message: Message, state: FSMContext):
    await cmd_users(message, state)

@dp.message(F.text == "üìä –û—Ç—á–µ—Ç—ã")
async def button_reports(message: Message, state: FSMContext):
    await cmd_report(message, state)

@dp.message(F.text == "üì¶ –û—Å—Ç–∞—Ç–∫–∏")
async def button_warehouse_stock(message: Message, state: FSMContext):
    await warehouse.handle_stock(message, state)

@dp.message(F.text == "üìä –û—Å—Ç–∞—Ç–∫–∏")
async def button_production_stock(message: Message, state: FSMContext):
    logging.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞—Ç–∫–∏' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
    
    await warehouse.handle_stock(message, state)

@dp.message(F.text == "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def button_my_orders(message: Message, state: FSMContext):
    await state.set_state(MenuState.WAREHOUSE_ORDERS)
    await cmd_confirm_order(message, state)

@dp.message(F.text == "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã")
async def button_completed_orders_warehouse(message: Message, state: FSMContext):
    await state.set_state(MenuState.WAREHOUSE_COMPLETED_ORDERS)
    await warehouse.handle_completed_orders(message, state)

@dp.message(F.text == "üì• –ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è")
async def button_income_materials(message: Message, state: FSMContext):
    await state.set_state(MenuState.PRODUCTION_MATERIALS)
    await production.handle_materials_income(message, state)

@dp.message(F.text == "üõ† –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")
async def button_production(message: Message, state: FSMContext):
    await state.set_state(MenuState.PRODUCTION_PROCESS)
    await production.handle_production(message, state)

@dp.message(F.text == "üö´ –ë—Ä–∞–∫")
async def button_defect(message: Message, state: FSMContext):
    await state.set_state(MenuState.PRODUCTION_DEFECT)
    await production.handle_defect(message, state)

@dp.message(F.text == "üìã –ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")
async def button_production_orders(message: Message, state: FSMContext):
    logging.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = next(get_db())
    try:
        user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏–º–µ–µ—Ç —Ä–æ–ª—å {user.role if user else 'None'}")
    finally:
        db.close()
    
    await state.set_state(MenuState.PRODUCTION_ORDERS)
    await production_orders.handle_my_orders(message, state)

@dp.message(F.text == "üì¶ –°–∫–ª–∞–¥")
async def button_warehouse(message: Message, state: FSMContext):
    await state.set_state(MenuState.WAREHOUSE_STOCK)
    await cmd_stock(message, state)

@dp.message(F.text == "üíº –ü—Ä–æ–¥–∞–∂–∏")
async def button_sales(message: Message, state: FSMContext):
    await handle_stock(message, state)

@dp.message(F.text.in_({"üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "üíº –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", "üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "üì¶ –°–∫–ª–∞–¥"}))
async def button_role_selection(message: Message, state: FSMContext):
    await admin.process_role(message, state)

@dp.message(F.text == "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
async def button_user_management(message: Message, state: FSMContext):
    await super_admin.handle_user_management(message, state)

@dp.message(F.text == "üìä –û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def button_reports_and_stats(message: Message, state: FSMContext):
    await super_admin.handle_reports(message, state)

@dp.message(F.text == "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º")
async def button_warehouse_management(message: Message, state: FSMContext):
    await super_admin.handle_warehouse_management(message, state)

@dp.message(F.text == "üè≠ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º")
async def button_production_management(message: Message, state: FSMContext):
    await super_admin.handle_production_management(message, state)

@dp.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
async def button_system_settings(message: Message, state: FSMContext):
    await super_admin.handle_system_settings(message, state)

@dp.message(F.text == "üìù –ó–∞–∫–∞–∑–∞—Ç—å")
async def button_order_production(message: Message, state: FSMContext):
    await production_orders.handle_production_order(message, state)

@dp.message(F.text == "üì¶ –ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞ —Å–∫–ª–∞–¥")
async def button_order_warehouse(message: Message, state: FSMContext):
    await warehouse.handle_order_warehouse(message, state)

@dp.message(F.text == "üè≠ –†–æ–ª—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞")
async def button_production_role(message: Message, state: FSMContext):
    await assign_role(message, state, UserRole.PRODUCTION, "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞", parse_mode="Markdown")

@dp.message(F.text == "üì¶ –†–æ–ª—å —Å–∫–ª–∞–¥–∞")
async def button_warehouse_role(message: Message, state: FSMContext):
    await assign_role(message, state, UserRole.WAREHOUSE, "—Å–∫–ª–∞–¥–∞", parse_mode="Markdown")

@dp.message(F.text == "üíº –†–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")
async def button_sales_role(message: Message, state: FSMContext):
    await assign_role(message, state, UserRole.SALES_MANAGER, "–º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", parse_mode="Markdown")

@dp.message(F.text == "‚óÄÔ∏è –ù–∞–∑–∞–¥")
async def button_back(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é."""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = next(get_db())
    try:
        user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
        if not user:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à—É —Ä–æ–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å /start", parse_mode="Markdown")
            return
            
        current_state = await state.get_state()
        if not current_state:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ä–æ–ª–∏
            main_menu_state = get_main_menu_state_for_role(user.role)
            await state.set_state(main_menu_state)
            await message.answer(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                reply_markup=get_menu_keyboard(main_menu_state),
                parse_mode="Markdown"
            )
            return
            
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é –∏–∑ MenuState
        try:
            menu_state = MenuState(current_state)
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é go_back —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ä–æ–ª–∏
            next_menu, keyboard = await go_back(state, user.role)
            
            if next_menu:
                await state.set_state(next_menu)
                await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é.", reply_markup=keyboard, parse_mode="Markdown")
            else:
                # –ï—Å–ª–∏ next_menu None, –∑–Ω–∞—á–∏—Ç –º—ã —É–∂–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
                main_menu_state = get_main_menu_state_for_role(user.role)
                await state.set_state(main_menu_state)
                await message.answer(
                    "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                    reply_markup=get_menu_keyboard(main_menu_state),
                    parse_mode="Markdown"
                )
                
        except ValueError:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è MenuState, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–æ–ª–∏
            main_menu_state = get_main_menu_state_for_role(user.role)
            await state.set_state(main_menu_state)
            await message.answer(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                reply_markup=get_menu_keyboard(main_menu_state),
                parse_mode="Markdown"
            )
    finally:
        db.close()

@dp.message(F.text == "üì¶ –û—Å—Ç–∞—Ç–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
async def button_materials_report(message: Message, state: FSMContext):
    await super_admin.handle_materials_report(message, state)

@dp.message(F.text == "üí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂")
async def button_sales_report(message: Message, state: FSMContext):
    await super_admin.handle_sales_report(message, state)

@dp.message(F.text == "üè≠ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞")
async def button_production_report(message: Message, state: FSMContext):
    await super_admin.handle_production_report(message, state)

@dp.message(F.text == "üìù –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π")
async def button_operations_history(message: Message, state: FSMContext):
    await super_admin.handle_operations_history(message, state)

@dp.message(F.text == "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã")
async def button_completed_orders(message: Message, state: FSMContext):
    await super_admin.handle_completed_orders(message, state)

@dp.message(F.text == "üì§ –ó–∞–∫–∞–∑—ã –Ω–∞ –æ—Ç–≥—Ä—É–∑–∫—É")
async def button_shipping_orders(message: Message, state: FSMContext):
    await super_admin.handle_shipping_orders(message, state)

# Function to create default admin user if not exists
def create_default_user_if_not_exists():
    try:
        admin_id = int(os.getenv("ADMIN_USER_ID", 0))
        if admin_id == 0:
            logging.warning("ADMIN_USER_ID is not set or is 0. Skip creating default admin user.")
            return
        
        db = next(get_db())
        try:
            # Check if admin user already exists
            user = db.query(User).filter(User.telegram_id == admin_id).first()
            if not user:
                # Create new admin user
                logging.info(f"Creating default admin user with ID {admin_id}")
                user = User(
                    telegram_id=admin_id,
                    username="admin",  # Will be updated when admin interacts with bot
                    role=UserRole.SUPER_ADMIN
                )
                db.add(user)
                db.commit()
                logging.info("Default admin user created successfully")
            else:
                # Ensure existing user has SUPER_ADMIN role
                if user.role != UserRole.SUPER_ADMIN:
                    user.role = UserRole.SUPER_ADMIN
                    db.commit()
                    logging.info(f"Updated user {admin_id} role to SUPER_ADMIN")
        finally:
            db.close()
    except Exception as e:
        logging.error(f"Error creating default admin user: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–æ–ª–µ–π)
async def assign_role(message: Message, state: FSMContext, role: UserRole, role_name: str, **kwargs):
    """–≠–º—É–ª—è—Ü–∏—è —Ä–æ–ª–∏ –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    db = next(get_db())
    try:
        user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
        if not user or user.role != UserRole.SUPER_ADMIN:
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ —Ä–æ–ª–µ–π.", **kwargs)
            return
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–¥–º–∏–Ω–∞
        await state.update_data(is_admin_context=True)
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–æ–ª–∏
        main_menu_state = {
            UserRole.SUPER_ADMIN: MenuState.SUPER_ADMIN_MAIN,
            UserRole.SALES_MANAGER: MenuState.SALES_MAIN,
            UserRole.WAREHOUSE: MenuState.WAREHOUSE_MAIN,
            UserRole.PRODUCTION: MenuState.PRODUCTION_MAIN,
            UserRole.NONE: None,  # –î–ª—è —Ä–æ–ª–∏ NONE –Ω–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        }[role]
        
        await state.set_state(main_menu_state)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ —Å –¥–æ–ø. –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∫—É
        keyboard = get_menu_keyboard(main_menu_state, is_admin_context=True)
        
        await message.answer(
            f"‚úÖ –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ —Ä–µ–∂–∏–º {role_name}.\n"
            f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É",
            reply_markup=keyboard,
            **kwargs
        )
    finally:
        db.close()

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    Base.metadata.create_all(engine)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞
    create_default_user_if_not_exists()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –µ—Å–ª–∏ –º—ã –Ω–∞ Heroku
    if os.getenv("HEROKU", "0") == "1":
        flask_thread = threading.Thread(target=run_flask)
        flask_thread.daemon = True
        flask_thread.start()
        logging.info("–ó–∞–ø—É—â–µ–Ω –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Flask –¥–ª—è Heroku")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    asyncio.run(main()) 