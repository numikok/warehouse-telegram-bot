from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from models import UserRole
from enum import Enum, auto
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.fsm.state import State
import logging
from typing import Union

class MenuState(str, Enum):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
    SUPER_ADMIN_MAIN = "super_admin_main"
    SALES_MAIN = "sales_main"
    WAREHOUSE_MAIN = "warehouse_main"
    PRODUCTION_MAIN = "production_main"
    
    # –ü–æ–¥–º–µ–Ω—é –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
    PRODUCTION_MATERIALS = "production_materials"
    PRODUCTION_DEFECT = "production_defect"
    PRODUCTION_PROCESS = "production_process"
    PRODUCTION_ORDERS = "production_orders"
    
    # –ü–æ–¥–º–µ–Ω—é —Å–∫–ª–∞–¥–∞
    WAREHOUSE_STOCK = "warehouse_stock"
    WAREHOUSE_ORDERS = "warehouse_orders"
    WAREHOUSE_INCOME = "warehouse_income"
    WAREHOUSE_MATERIALS = "warehouse_materials"
    WAREHOUSE_COMPLETED_ORDERS = "warehouse_completed_orders"
    WAREHOUSE_VIEW_COMPLETED_ORDER = "warehouse_view_completed_order"
    WAREHOUSE_RETURN_REQUESTS = "warehouse_return_requests"
    VIEW_RETURN_REQUEST = "view_return_request"
    
    # –ü–æ–¥–º–µ–Ω—é –ø—Ä–æ–¥–∞–∂
    SALES_ORDER = "sales_order"
    SALES_STOCK = "sales_stock"
    SALES_HISTORY = "sales_history"
    SALES_CREATE_ORDER = "sales_create_order"  # –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    SALES_ORDER_CONFIRM = "sales_order_confirm"  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    SALES_COMPLETED_ORDERS = "sales_completed_orders"
    SALES_VIEW_COMPLETED_ORDER = "sales_view_completed_order"
    
    # –ü–æ–¥–º–µ–Ω—é —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    SUPER_ADMIN_USERS = "super_admin_users"
    SUPER_ADMIN_REPORTS = "super_admin_reports"
    SUPER_ADMIN_SETTINGS = "super_admin_settings"
    SUPER_ADMIN_WAREHOUSE = "super_admin_warehouse"
    SUPER_ADMIN_PRODUCTION = "super_admin_production"
    SUPER_ADMIN_SALES = "super_admin_sales"
    SUPER_ADMIN_CHINA_ORDER = "super_admin_china_order"
    
    # –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å - –Ω–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
    INVENTORY_CATEGORIES = "inventory_categories"
    INVENTORY_FINISHED_PRODUCTS = "inventory_finished_products"
    INVENTORY_FILMS = "inventory_films"
    INVENTORY_PANELS = "inventory_panels"
    INVENTORY_JOINTS = "inventory_joints"
    INVENTORY_GLUE = "inventory_glue"

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –∫–∞–∫–æ–µ –º–µ–Ω—é –∫—É–¥–∞ –≤–µ–¥–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ù–∞–∑–∞–¥"
MENU_NAVIGATION = {
    # –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
    MenuState.PRODUCTION_MATERIALS: MenuState.PRODUCTION_MAIN,
    MenuState.PRODUCTION_DEFECT: MenuState.PRODUCTION_MAIN,
    MenuState.PRODUCTION_PROCESS: MenuState.PRODUCTION_MAIN,
    MenuState.PRODUCTION_ORDERS: MenuState.PRODUCTION_MAIN,
    MenuState.PRODUCTION_MAIN: MenuState.SUPER_ADMIN_MAIN,  # –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Ä–æ–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞
    
    # –°–∫–ª–∞–¥
    MenuState.WAREHOUSE_STOCK: MenuState.WAREHOUSE_MAIN,
    MenuState.WAREHOUSE_ORDERS: MenuState.WAREHOUSE_MAIN,
    MenuState.WAREHOUSE_INCOME: MenuState.WAREHOUSE_MAIN,
    MenuState.WAREHOUSE_MATERIALS: MenuState.WAREHOUSE_MAIN,
    MenuState.WAREHOUSE_COMPLETED_ORDERS: MenuState.WAREHOUSE_MAIN,
    MenuState.WAREHOUSE_VIEW_COMPLETED_ORDER: MenuState.WAREHOUSE_COMPLETED_ORDERS,
    MenuState.WAREHOUSE_RETURN_REQUESTS: MenuState.WAREHOUSE_MAIN,
    MenuState.VIEW_RETURN_REQUEST: MenuState.WAREHOUSE_RETURN_REQUESTS,
    MenuState.WAREHOUSE_MAIN: MenuState.SUPER_ADMIN_MAIN,  # –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Ä–æ–ª–∏ —Å–∫–ª–∞–¥–∞ –≤ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞
    
    # –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å - –Ω–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
    MenuState.INVENTORY_FINISHED_PRODUCTS: MenuState.INVENTORY_CATEGORIES,
    MenuState.INVENTORY_FILMS: MenuState.INVENTORY_CATEGORIES,
    MenuState.INVENTORY_PANELS: MenuState.INVENTORY_CATEGORIES,
    MenuState.INVENTORY_JOINTS: MenuState.INVENTORY_CATEGORIES,
    MenuState.INVENTORY_GLUE: MenuState.INVENTORY_CATEGORIES,
    MenuState.INVENTORY_CATEGORIES: lambda role: ROLE_MAIN_MENU.get(role),
    
    # –ü—Ä–æ–¥–∞–∂–∏
    MenuState.SALES_ORDER: MenuState.SALES_MAIN,
    MenuState.SALES_STOCK: MenuState.SALES_MAIN,
    MenuState.SALES_HISTORY: MenuState.SALES_MAIN,
    MenuState.SALES_CREATE_ORDER: MenuState.SALES_MAIN,  # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–¥–∞–∂
    MenuState.SALES_ORDER_CONFIRM: MenuState.SALES_CREATE_ORDER,  # –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∑–∞–∫–∞–∑–∞
    MenuState.SALES_COMPLETED_ORDERS: MenuState.SALES_MAIN,
    MenuState.SALES_VIEW_COMPLETED_ORDER: MenuState.SALES_COMPLETED_ORDERS,
    MenuState.SALES_MAIN: MenuState.SUPER_ADMIN_MAIN,  # –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Ä–æ–ª–∏ –ø—Ä–æ–¥–∞–∂ –≤ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞
    
    # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    MenuState.SUPER_ADMIN_USERS: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_REPORTS: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_SETTINGS: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_WAREHOUSE: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_PRODUCTION: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_SALES: MenuState.SUPER_ADMIN_MAIN,
    MenuState.SUPER_ADMIN_CHINA_ORDER: MenuState.SUPER_ADMIN_MAIN,
}

# –ú–∞–ø–ø–∏–Ω–≥ —Ä–æ–ª–µ–π –Ω–∞ –∏—Ö –≥–ª–∞–≤–Ω—ã–µ –º–µ–Ω—é
ROLE_MAIN_MENU = {
    UserRole.SUPER_ADMIN: MenuState.SUPER_ADMIN_MAIN,
    UserRole.SALES_MANAGER: MenuState.SALES_MAIN,
    UserRole.WAREHOUSE: MenuState.WAREHOUSE_MAIN,
    UserRole.PRODUCTION: MenuState.PRODUCTION_MAIN,
    UserRole.NONE: None,  # –î–ª—è —Ä–æ–ª–∏ NONE –Ω–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
}

def get_menu_keyboard(menu_state: MenuState, is_admin_context: bool = False) -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–Ω—é
    
    Args:
        menu_state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        is_admin_context: –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    """
    keyboards = {
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        MenuState.PRODUCTION_MAIN: [
            [KeyboardButton(text="üì• –ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è")],
            [KeyboardButton(text="üõ† –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")],
            [KeyboardButton(text="üìã –ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")],
            [KeyboardButton(text="üö´ –ë—Ä–∞–∫")],
            [KeyboardButton(text="üìä –û—Å—Ç–∞—Ç–∫–∏")]
        ],
        
        # –ü–æ–¥–º–µ–Ω—é –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        MenuState.PRODUCTION_MATERIALS: [
            [KeyboardButton(text="ü™µ –ü–∞–Ω–µ–ª—å")],
            [KeyboardButton(text="üé® –ü–ª–µ–Ω–∫–∞")],
            [KeyboardButton(text="‚öôÔ∏è –°—Ç—ã–∫")],
            [KeyboardButton(text="üß¥ –ö–ª–µ–π")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.PRODUCTION_DEFECT: [
            [KeyboardButton(text="ü™µ –ü–∞–Ω–µ–ª—å")],
            [KeyboardButton(text="üé® –ü–ª–µ–Ω–∫–∞")],
            [KeyboardButton(text="‚öôÔ∏è –°—Ç—ã–∫")],
            [KeyboardButton(text="üß¥ –ö–ª–µ–π")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.PRODUCTION_PROCESS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.PRODUCTION_ORDERS: [
            [KeyboardButton(text="‚ú® –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–¥–∞–∂
        MenuState.SALES_MAIN: [
            [KeyboardButton(text="üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")],
            [KeyboardButton(text="üìù –ó–∞–∫–∞–∑–∞—Ç—å")],
            [KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã")],
            [KeyboardButton(text="üìä –û—Å—Ç–∞—Ç–∫–∏")],
        ],
        
        # –ü–æ–¥–º–µ–Ω—é –ø—Ä–æ–¥–∞–∂
        MenuState.SALES_ORDER: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SALES_STOCK: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SALES_HISTORY: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SALES_CREATE_ORDER: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SALES_ORDER_CONFIRM: [
            [KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"), KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SALES_COMPLETED_ORDERS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.SALES_VIEW_COMPLETED_ORDER: [
            [KeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö")]
        ],
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–∫–ª–∞–¥–∞
        MenuState.WAREHOUSE_MAIN: [
            [KeyboardButton(text="üì¶ –û—Å—Ç–∞—Ç–∫–∏"), KeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")],
            [KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã"), KeyboardButton(text="‚ôªÔ∏è –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç")]
        ],
        
        # –ü–æ–¥–º–µ–Ω—é —Å–∫–ª–∞–¥–∞
        MenuState.WAREHOUSE_STOCK: [
            [KeyboardButton(text="üìä –í—Å–µ –æ—Å—Ç–∞—Ç–∫–∏")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.WAREHOUSE_ORDERS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.WAREHOUSE_INCOME: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.WAREHOUSE_MATERIALS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.WAREHOUSE_COMPLETED_ORDERS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.WAREHOUSE_VIEW_COMPLETED_ORDER: [
            [KeyboardButton(text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö")]
        ],
        
        # –ù–æ–≤—ã–µ –º–µ–Ω—é –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        MenuState.INVENTORY_CATEGORIES: [
            [KeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è")],
            [KeyboardButton(text="üéû –ü–ª–µ–Ω–∫–∞")],
            [KeyboardButton(text="ü™µ –ü–∞–Ω–µ–ª–∏")],
            [KeyboardButton(text="üîÑ –°—Ç—ã–∫–∏")],
            [KeyboardButton(text="üß™ –ö–ª–µ–π")],
            [KeyboardButton(text="üìä –í—Å–µ –æ—Å—Ç–∞—Ç–∫–∏")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        # –ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø—Ä–æ—Å—Ç–æ –∏–º–µ–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        MenuState.INVENTORY_FINISHED_PRODUCTS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.INVENTORY_FILMS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.INVENTORY_PANELS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.INVENTORY_JOINTS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        MenuState.INVENTORY_GLUE: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
        MenuState.SUPER_ADMIN_MAIN: [
            [KeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")],
            [KeyboardButton(text="üìä –û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")],
            [KeyboardButton(text="üíº –†–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")],
            [KeyboardButton(text="üì¶ –†–æ–ª—å —Å–∫–ª–∞–¥–∞")],
            [KeyboardButton(text="üè≠ –†–æ–ª—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞")],
            [KeyboardButton(text="–ó–∞–∫–∞–∑ –≤ –ö–∏—Ç–∞–π")]
        ],
        
        # –ü–æ–¥–º–µ–Ω—é —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
        MenuState.SUPER_ADMIN_USERS: [
            [KeyboardButton(text="üë§ –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å")],
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")],
            [KeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SUPER_ADMIN_REPORTS: [
            [KeyboardButton(text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="üìà –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")],
            [KeyboardButton(text="üè≠ –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É")],
            [KeyboardButton(text="üìù –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SUPER_ADMIN_SETTINGS: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SUPER_ADMIN_WAREHOUSE: [
            [KeyboardButton(text="üì¶ –û—Å—Ç–∞—Ç–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")],
            [KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–≥—Ä—É–∑–∫—É")],
            [KeyboardButton(text="üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã")],
            [KeyboardButton(text="‚ûï –ü—Ä–∏—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SUPER_ADMIN_PRODUCTION: [
            [KeyboardButton(text="üì• –ü—Ä–∏—Ö–æ–¥ —Å—ã—Ä—å—è")],
            [KeyboardButton(text="üõ† –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")],
            [KeyboardButton(text="üìã –ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        MenuState.SUPER_ADMIN_SALES: [
            [KeyboardButton(text="üìù –ó–∞–∫–∞–∑–∞—Ç—å")],
            [KeyboardButton(text="üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã")],
            [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        # –ù–æ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –ó–∞–∫–∞–∑–∞ –≤ –ö–∏—Ç–∞–π
        MenuState.SUPER_ADMIN_CHINA_ORDER: [
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        
        # Fallback
        None: [[KeyboardButton(text="/start")]]
    }
    
    # Special handling for admin context (add back button)
    if is_admin_context and menu_state in [MenuState.WAREHOUSE_MAIN, MenuState.PRODUCTION_MAIN, MenuState.SALES_MAIN]:
        keyboard_layout = keyboards.get(menu_state, keyboards[None])
        # Ensure '–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É' is not already there
        if not any(b.text == "üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É" for row in keyboard_layout for b in row):
             keyboard_layout.append([KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É")])
        return ReplyKeyboardMarkup(keyboard=keyboard_layout, resize_keyboard=True)

    # Default return
    keyboard_layout = keyboards.get(menu_state, keyboards[None])
    return ReplyKeyboardMarkup(keyboard=keyboard_layout, resize_keyboard=True)

async def go_back(state: FSMContext, role: UserRole) -> tuple[Union[MenuState, None], ReplyKeyboardMarkup]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ.
    """
    current_state_str = await state.get_state()
    logging.info(f"go_back called. Current state string: {current_state_str}, Role: {role}")
    
    next_menu: Union[MenuState, None] = None
    main_role_menu = ROLE_MAIN_MENU.get(role)

    if not current_state_str:
        # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–æ–ª–∏
        logging.warning("Current state is None, returning to main role menu.")
        next_menu = main_role_menu
    else:
        try:
            current_menu = MenuState(current_state_str)
            logging.info(f"Current menu state resolved to: {current_menu}")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è
            nav_target = MENU_NAVIGATION.get(current_menu)
            logging.info(f"Navigation target from MENU_NAVIGATION: {nav_target}")
            
            if callable(nav_target):
                logging.info("Navigation target is callable, executing with role.")
                next_menu = nav_target(role) # Call the lambda function
                logging.info(f"Result from callable: {next_menu}")
            elif isinstance(nav_target, MenuState):
                next_menu = nav_target
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∏–ª–∏ target –Ω–µ callable/MenuState
                logging.warning(f"No valid navigation target found for {current_menu}, returning to main role menu.")
                next_menu = main_role_menu

        except ValueError:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è MenuState, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–æ–ª–∏
            logging.warning(f"Current state '{current_state_str}' is not a valid MenuState, returning to main role menu.")
            next_menu = main_role_menu

    if next_menu is None:
        # –ï—Å–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (e.g., Role.NONE) –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        logging.error(f"Could not determine next menu. Returning None state and empty keyboard.")
        # –í–µ—Ä–Ω—É—Ç—å None –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å /start
        return None, ReplyKeyboardRemove() 
        
    logging.info(f"Determined next menu state: {next_menu}")
    # –ü–æ–ª—É—á–∞–µ–º state_data –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ is_admin_context
    state_data = await state.get_data()
    is_admin_context = state_data.get("is_admin_context", False)
    logging.info(f"Getting keyboard for {next_menu} with is_admin_context={is_admin_context}")
    
    keyboard = get_menu_keyboard(next_menu, is_admin_context)
    return next_menu, keyboard

def get_role_keyboard(role: UserRole) -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–ª–∏"""
    if role == UserRole.NONE:
        # –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ä–æ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return ReplyKeyboardRemove()
    
    main_menu = ROLE_MAIN_MENU[role]
    return get_menu_keyboard(main_menu)

def get_back_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥"""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]],
        resize_keyboard=True
    )

def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –û—Ç–º–µ–Ω–∞"""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]],
        resize_keyboard=True
    )

def get_joint_thickness_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–ª—â–∏–Ω–∞–º–∏ —Å—Ç—ã–∫–æ–≤
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="0.5")],
            [KeyboardButton(text="0.8")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    return keyboard

def get_film_thickness_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–ª—â–∏–Ω–∞–º–∏ –ø–ª–µ–Ω–∫–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="0.5")],
            [KeyboardButton(text="0.8")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    return keyboard

async def get_role_menu_keyboard(menu_state: MenuState, message: Message, state: FSMContext) -> ReplyKeyboardMarkup:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é, —É—á–∏—Ç—ã–≤–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–¥–º–∏–Ω–∞"""
    db = next(get_db())
    try:
        user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
        if not user:
            return get_menu_keyboard(menu_state)
            
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–ª–∞–≥ –∞–¥–º–∏–Ω-–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        state_data = await state.get_data()
        is_admin_context = state_data.get("is_admin_context", False)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–ª–∞–≥ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–¥–º–∏–Ω–∞ –¥–ª—è –º–µ–Ω—é
        if user.role == UserRole.SUPER_ADMIN and is_admin_context:
            return get_menu_keyboard(menu_state, is_admin_context=True)
        else:
            return get_menu_keyboard(menu_state)
    finally:
        db.close() 