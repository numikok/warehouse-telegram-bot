"""Add updated_at column to completed_orders

Revision ID: 48ef864841f3
Revises: 483a4527d960
Create Date: 2025-04-28 21:25:10.123456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48ef864841f3'
down_revision: Union[str, None] = '483a4527d960'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('completed_orders', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    # Manually set the onupdate trigger if necessary, SQLAlchemy might not add it automatically here
    # For PostgreSQL:
    op.execute(""".
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $$
    BEGIN
       NEW.updated_at = now();
       RETURN NEW;
    END;
    $$ language 'plpgsql';
    """)
    op.execute(""".
    CREATE TRIGGER update_completed_orders_updated_at
    BEFORE UPDATE ON completed_orders
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS update_completed_orders_updated_at ON completed_orders;")
    op.execute("DROP FUNCTION IF EXISTS update_updated_at_column();")
    op.drop_column('completed_orders', 'updated_at')
    # ### end Alembic commands ### 